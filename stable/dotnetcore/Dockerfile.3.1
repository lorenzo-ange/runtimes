# Image used only for build process
FROM mcr.microsoft.com/dotnet/core/sdk:3.1 AS build-env
WORKDIR /app

# Copy csproj and restore as distinct layers
COPY ./src/Kubeless.Core/*.csproj ./Kubeless.Core/
COPY ./src/Kubeless.Functions/*.csproj ./Kubeless.Functions/
COPY ./src/Kubeless.WebAPI/*.csproj ./Kubeless.WebAPI/
COPY ./src/Kubeless.WebAPI/nuget.config ./Kubeless.WebAPI/nuget.config
RUN dotnet restore ./Kubeless.WebAPI/

# Copy everything else and build in release mode
COPY ./src/ ./
RUN dotnet publish ./Kubeless.WebAPI/ -c Release -o Kubeless.WebAPI/out

# Build runtime image
FROM mcr.microsoft.com/dotnet/core/aspnet:3.1
WORKDIR /app
COPY --from=build-env /app/Kubeless.WebAPI/out .
# Kubeless.Functions reference
COPY --from=build-env /app/Kubeless.WebAPI/out/Kubeless.Functions.dll /usr/share/dotnet/store/x64/netcoreapp2.0/.

# install SQLAnywhere12 ODBC driver
COPY ./SQLAnywhere12 /usr/local/lib/SQLAnywhere12
RUN apt-get update && apt-get install -y libodbc1

RUN chown 1000 /app
COPY ./run-webapi.sh ./
RUN chmod +x ./run-webapi.sh

# Patch for Unirepo support
RUN sed -i 's/DEFAULT@SECLEVEL=2/DEFAULT@SECLEVEL=1/g' /etc/ssl/openssl.cnf
RUN sed -i 's/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g' /etc/ssl/openssl.cnf
RUN sed -i 's/DEFAULT@SECLEVEL=2/DEFAULT@SECLEVEL=1/g' /usr/lib/ssl/openssl.cnf
RUN sed -i 's/MinProtocol = TLSv1.2/MinProtocol = TLSv1/g' /usr/lib/ssl/openssl.cnf
#####################

ENTRYPOINT ["/app/run-webapi.sh"]